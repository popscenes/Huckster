@using Domain.Order
@model List<Domain.Order.Queries.Models.OrderAdminDetailsViewModel>

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="">
    <h2>Order Work Queue <small>@ViewBag.OrderStatus</small></h2>
    <div class="btn-group alert alert-sm alert-info">
        <a class="btn btn-default" href="@Url.Action("Index", new {orderStatus = OrderStatus.PaymentSucccessful.ToString()})">Payment Succcessful</a>
        <a class="btn btn-default" href="@Url.Action("Index", new {orderStatus = OrderStatus.RestaurantAccepted.ToString()})">Restaurant Accepted</a>
    </div>
    <div class="btn-group alert alert-sm alert-success">
        <a class="btn btn-default" href="@Url.Action("Index", new {orderStatus = OrderStatus.PickedUp.ToString()})">PickedUp</a>
        <a class="btn btn-default" href="@Url.Action("Index", new {orderStatus = OrderStatus.Delivered.ToString()})">Delivered</a>
    </div>
    <div class="btn-group alert alert-sm alert-danger">
        <a class="btn btn-default" href="@Url.Action("Index", new {orderStatus = OrderStatus.Cancelled.ToString()})">Cancelled</a>
        <a class="btn btn-default" href="@Url.Action("Index", new {orderStatus = OrderStatus.PaymentFailed.ToString()})">Payment Failed</a>
    </div>

    <table class="table">

        <tr>
            <th>
                Restaurant
            </th>
            <th>
                Assigned To
            </th>
            <th>
                PickUp Time
            </th>
            <th>
                Delivery Suburb
            </th>
            <th>
                Delivery Time
            </th>
            <th>
                Order Status
            </th>
            <th>

            </th>
            <th>

            </th>
        </tr>
        @foreach (var order in Model)
        {
            <tr>
                <td>
                    @order.Restaurant.Name
                </td>
                <td>
                    @{
                        var deliveryUser = "Not-Assinged";
                        if (order.DeliveryUser != null)
                        {
                            deliveryUser = order.DeliveryUser.UserName;
                        }
                    }
                    @deliveryUser
                </td>
                <td>
                    @{
                        var pickUpTime = "Not-Set";
                        if (order.Order.PickUpTime != null)
                        {
                            pickUpTime = order.Order.PickUpTime.ToString();
                        }
                    }
                    @pickUpTime
                </td>
                <td>
                    @{
                        var deliverAddress = "Not-Set";
                        if (order.DeliverAddress != null)
                        {
                            deliverAddress = order.DeliverAddress.Suburb;
                        }
                    }
                    @deliverAddress
                </td>
                <td>
                    @order.Order.DeliveryTime.ToString()
                </td>
                <td>
                    @order.Order.Status
                </td>
                <td>
                    @*@Html.Partial("_orderActionButtons", order)*@
                    <a class="btn btn-default btn-primary" href="@Url.Action("Detail", new {orderId = order.Order.AggregateRootId})">Detail</a>
                </td>
            </tr>
        }
    </table>
</div>

<script type="text/javascript">
    setTimeout(function () {
        window.location.reload(1);
    }, 5000);
</script>